{
  "name": "memoredis",
  "version": "2.0.0",
  "description": "Redis memoization library with good Typescript generics, locking, and argument-wide bulk invalidation",
  "files": [
    "dist"
  ],
  "type": "module",
  "main": "./dist/index.cjs",
  "types": "./dist/index.d.ts",
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "require": "./dist/index.cjs"
    }
  },
  "homepage": "https://github.com/politics-rewired/memoredis#readme",
  "repository": "https://github.com/politics-rewired/memoredis",
  "license": "MIT",
  "keywords": [],
  "scripts": {
    "describe": "npm-scripts-info",
    "build": "tsup",
    "fix": "run-s fix:*",
    "fix:prettier": "prettier \"src/**/*.ts\" --write",
    "fix:lint": "eslint --ext js,ts --fix .",
    "test": "run-s test:*",
    "test:lint": "eslint --ext js,ts --fix .",
    "test:unit": "jest",
    "watch": "run-s clean build:main && run-p \"build:main -- -w\" \"test:unit -- --watch\"",
    "cov": "run-s build test:unit cov:html && open-cli coverage/index.html",
    "cov:html": "nyc report --reporter=html",
    "cov:send": "nyc report --reporter=lcov && codecov",
    "cov:check": "nyc report && nyc check-coverage --lines 100 --functions 100 --branches 100",
    "doc": "run-s doc:html && open-cli build/docs/index.html",
    "doc:html": "typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --out build/docs",
    "doc:json": "typedoc src/ --exclude **/*.spec.ts --target ES6 --mode file --json build/docs/typedoc.json",
    "doc:publish": "gh-pages -m \"[ci skip] Updates\" -d build/docs",
    "release": "standard-version",
    "reset": "git clean -dfx && git reset --hard && npm i",
    "clean": "trash build test",
    "prepare-release": "run-s reset test cov:check doc:html version doc:publish"
  },
  "scripts-info": {
    "info": "Display information about the package scripts",
    "build": "Clean and rebuild the project",
    "fix": "Try to automatically fix any linting problems",
    "test": "Lint and unit test the project",
    "watch": "Watch and rebuild the project on save, then rerun relevant tests",
    "cov": "Rebuild, run tests, then create and open the coverage report",
    "doc": "Generate HTML API documentation and open it in a browser",
    "doc:json": "Generate API documentation in typedoc JSON format",
    "release": "Bump package.json version, update CHANGELOG.md, tag release",
    "reset": "Delete all untracked files and reset the repo to the last commit",
    "prepare-release": "One-step: clean, build, test, publish docs, and prep a release"
  },
  "dependencies": {
    "json-date-parser": "^1.0.1",
    "json-stable-stringify": "^1.0.1",
    "lodash": "^4.17.21",
    "redis": "^4.3.1",
    "redis-promise-lock": "^1.0.4",
    "runtypes": "^6.6.0"
  },
  "devDependencies": {
    "@bitjson/npm-scripts-info": "^1.0.0",
    "@bitjson/typedoc": "^0.15.0-0",
    "@istanbuljs/nyc-config-typescript": "^1.0.2",
    "@types/jest": "^29.2.0",
    "@types/json-stable-stringify": "^1.0.36",
    "@types/lodash": "^4.14.186",
    "@types/node": "^18.11.0",
    "@typescript-eslint/eslint-plugin": "^5.40.1",
    "@typescript-eslint/parser": "^5.40.1",
    "benny": "^3.7.1",
    "codecov": "^3.8.3",
    "cz-conventional-changelog": "^3.3.0",
    "eslint": "^8.25.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-prettier": "^4.2.1",
    "eslint-plugin-simple-import-sort": "^8.0.0",
    "faker": "^6.6.6",
    "gh-pages": "^4.0.0",
    "jest": "^29.2.0",
    "npm-run-all": "^4.1.5",
    "open-cli": "^7.1.0",
    "prettier": "^2.7.1",
    "standard-version": "^9.5.0",
    "trash-cli": "^5.0.0",
    "ts-jest": "^29.0.3",
    "ts-node": "^10.9.1",
    "tsup": "^8.0.2",
    "typescript": "^5.3.3"
  },
  "config": {
    "commitizen": {
      "path": "cz-conventional-changelog"
    }
  },
  "prettier": {
    "singleQuote": true
  },
  "nyc": {
    "extends": "@istanbuljs/nyc-config-typescript",
    "exclude": [
      "**/*.spec.js"
    ]
  },
  "packageManager": "yarn@4.1.0"
}
